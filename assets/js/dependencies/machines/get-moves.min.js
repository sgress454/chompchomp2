(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){machines["get-moves"]=Machine.build(require("../../../../node-machines/get-moves"))},{"../../../../node-machines/get-moves":2}],2:[function(require,module,exports){module.exports={inputs:{game:{type:"Game"},player:{type:"integer"},from:{type:"integer"}},exits:{success:{type:"array"}},fn:function($i,$x){var player=$i.player;var game=$i.game;var boardSize=game.boardSize;var numSquares=boardSize*boardSize;var from=parseInt($i.from);if(isNaN(from)){return $x.error()}var fromCol=from%boardSize;var fromRow=Math.floor(from/boardSize);var validSpaces=_.without([getValidSpace(fromCol-1,fromRow-1),getValidSpace(fromCol,fromRow-1),getValidSpace(fromCol+1,fromRow-1),getValidSpace(fromCol-1,fromRow),getValidSpace(fromCol+1,fromRow),getValidSpace(fromCol-1,fromRow+1),getValidSpace(fromCol,fromRow+1),getValidSpace(fromCol+1,fromRow+1),getValidSpace(fromCol-2,fromRow-2),getValidSpace(fromCol,fromRow-2),getValidSpace(fromCol+2,fromRow-2),getValidSpace(fromCol-2,fromRow),getValidSpace(fromCol+2,fromRow),getValidSpace(fromCol-2,fromRow+2),getValidSpace(fromCol,fromRow+2),getValidSpace(fromCol+2,fromRow+2)],null);return $x.success(validSpaces);function getValidSpace(col,row,tileVal){tileVal=tileVal||0;if(row>=boardSize||col>=boardSize||row<0||col<0){return null}var space=row*boardSize+col;if(game.board[space]==tileVal){return space}return null}}}},{}]},{},[1]);