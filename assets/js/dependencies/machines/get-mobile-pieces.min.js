(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){machines["get-mobile-pieces"]=Machine.build(require("../../../../node-machines/get-mobile-pieces"))},{"../../../../node-machines/get-mobile-pieces":2}],2:[function(require,module,exports){module.exports={inputs:{game:{type:"Game"},pieces:{type:"object"},player:{type:"integer"}},exits:{success:{type:"array"}},fn:function($i,$x){var player=$i.player;var game=$i.game;var pieces=$i.pieces;var boardSize=game.boardSize;var numSquares=boardSize*boardSize;var tilesToCheck,spaces,playerPieces;if(!pieces){tilesToCheck=_.where(Object.keys(game.board),function(tile){return game.board[tile]==player})}else{tilesToCheck=pieces["player"+player]}var mobilePieces=_.without(_.map(tilesToCheck,function(tile){var col=tile%boardSize;var row=Math.floor(tile/boardSize);if(null!==getValidSpace(col-1,row-1)){return tile}if(null!==getValidSpace(col,row-1)){return tile}if(null!==getValidSpace(col+1,row-1)){return tile}if(null!==getValidSpace(col-1,row)){return tile}if(null!==getValidSpace(col+1,row)){return tile}if(null!==getValidSpace(col-1,row+1)){return tile}if(null!==getValidSpace(col,row+1)){return tile}if(null!==getValidSpace(col+1,row+1)){return tile}if(null!==getValidSpace(col-2,row-2)){return tile}if(null!==getValidSpace(col,row-2)){return tile}if(null!==getValidSpace(col+2,row-2)){return tile}if(null!==getValidSpace(col-2,row)){return tile}if(null!==getValidSpace(col+2,row)){return tile}if(null!==getValidSpace(col-2,row+2)){return tile}if(null!==getValidSpace(col,row+2)){return tile}if(null!==getValidSpace(col+2,row+2)){return tile}return null}),null);return $x.success(mobilePieces);function getValidSpace(col,row,tileVal){tileVal=tileVal||0;if(row>=boardSize||col>=boardSize||row<0||col<0){return null}var space=row*boardSize+col;if(game.board[space]==tileVal){return space}return null}}}},{}]},{},[1]);